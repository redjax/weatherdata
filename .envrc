export DIRENV_ENV=${DIRENV_ENV:-dev}

## Unload direnv before launching tmux, avoid issues with
#  env vars in subshells when launching tmux with direnv activated
alias tmux='direnv exec / tmux'

## Check if .direnv exists
if [[ ! -d .direnv ]]; then
    mkdir -p .direnv
fi

## Check if env dirs exist

if [[ ! -d .direnv/dev ]]; then
    mkdir -p .direnv/dev
fi

if [[ ! -d .direnv/rc ]]; then
    mkdir -p .direnv/rc
fi

if [[ ! -d .direnv/prod ]]; then
    mkdir -p .direnv/prod
fi

## Create dev environment files
if [[ ! -f .direnv/dev/.env ]]; then
    # cp .direnv/.env.example .direnv/dev/.env
    echo 'export ENV_FOR_DYNACONF="dev"' >> .direnv/dev/.env
fi

if [[ ! -f .direnv/dev/.secrets ]]; then
    cp .direnv/.secrets.example .direnv/dev/.secrets
fi

## Create rc environment files
if [[ ! -f .direnv/rc/.env ]]; then
    # cp .direnv/.env.example .direnv/rc/.env
    echo 'export ENV_FOR_DYNACONF="rc"' >> .direnv/rc/.env
fi

if [[ ! -f .direnv/rc/.secrets ]]; then
    cp .direnv/.secrets.example .direnv/rc/.secrets
fi

## Create prod
if [[ ! -f .direnv/prod/.env ]]; then
    # cp .direnv/.env.example .direnv/prod/.env 
    echo 'export ENV_FOR_DYNACONF="prod"' >> .direnv/prod/.env
fi

if [[ ! -f .direnv/prod/.secrets ]]; then
    cp .direnv/.secrets.example .direnv/prod/.secrets
fi

## Source env file
if [[ "$DIRENV_ENV" ]]; then
    if [[ "$DIRENV_ENV" == "prod" ]]; then
        source ".direnv/prod/.env"
        source ".direnv/prod/.secrets"
    elif [[ "$DIRENV_ENV" == "rc" ]]; then
        source ".direnv/rc/.env"
        source ".direnv/rc/.secrets"
    else
        source ".direnv/dev/.env"
        source ".direnv/dev/.secrets"
    fi
else
    source ".direnv/dev/.env"
    source ".direnv/dev/.secrets"
fi

## Run a git fetch if in a git repo
if on_git_branch; then
    echo && git status --short --branch &&
    echo && git fetch --verbose
fi
