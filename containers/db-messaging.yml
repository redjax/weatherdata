---
networks:
  weatherdata_devnet: {}
    # external: true

volumes:
  postgres_data: {}
  rabbitmq_data: {}
  redis_data: {}

services:

  
  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG:-bullseye}
    container_name: ${POSTGRES_CONTAINER_NAME:-weatherdata-postgres}
    restart: unless-stopped
    user: "$UID:$GID"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Read section on this variable in docker docs before setting:
      #   https://hub.docker.com/_/postgres/
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-postgres}
    expose:
      - 5432
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ${POSTGRES_DATA_DIR:-postgres_data}:/var/lib/postgresql/data
      # Mount directory with init scripts for docker, i.e. install UUID extension
      - ${POSTGRES_ENTRYPOINT_DIR:-./entrypoints/pg_entrypoint}:/docker-entrypoint-initdb.d/
      # Mount directory to store SQL scripts
      - ${POSTGRES_SCRIPTS_DIR:-./container_data/weatherdata/postgres/scripts}:/scripts
      # Uncomment line below to restore a database backup.
      # - ${POSTGRES_DB_BACKUP}:/path/here
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DATABASE} -U $${POSTGRES_USER}",
        ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - weatherdata_devnet

  # db_init:
  #   ## Container to initialize the Postgres database for the weather app.
  #   #  Runs when the stack is brought up, does not restart.
  #   container_name: "weatherdata-db_init"
  #   restart: no
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       UV_IMAGE_VER: ${UV_IMAGE_VER:-0.4.27}
  #       PYTHON_IMAGE_VER: ${PYTHON_IMAGE_VER:-3.12-slim}
  #     target: run_scripts
  #   entrypoint: ["uv", "run", "python", "/project/scripts/db_init.py"]
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./src:/project/src
  #     - ./alembic.ini:/project/alembic.ini
  #     - ./migrations:/project/migrations
  #     - ./scripts:/project/scripts
  #   environment:
  #     DYNACONF_LOG_LEVEL: DEBUG
  #     DYNACONF_DB_TYPE: ${DB_TYPE:-postgres}
  #     DYNACONF_DB_DRIVERNAME: ${DB_DRIVERNAME:-postgresql+psycopg2}
  #     DYNACONF_DB_HOST: ${DB_HOST:-postgres}
  #     DYNACONF_DB_PORT: ${DB_PORT:-5432}
  #     DYNACONF_DB_NAME: ${DB_NAME:-auto_weather}
  #     DYNACONF_DB_USERNAME: ${POSTGRES_USER:-postgres}
  #     DYNACONF_DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}  
  #     DYNACONF_DB_DATABASE: ${POSTGRES_DATABASE:-auto_weather}  
  #   networks:
  #     - weatherdata_net

  redis:
    image: redis:alpine
    container_name: weatherdata_redis
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-redis}"]
    env_file:
      - ./envs/dev.messaging.env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis}
    volumes:
      - ${REDIS_DATA_DIR:-redis_data}:/data
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - weatherdata_devnet

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: weatherdata_redis-commander
    restart: unless-stopped
    env_file:
      - ./envs/dev.messaging.env
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis}
      HTTP_USER: ${REDIS_COMMANDER_HTTP_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_HTTP_PASSWORD:-admin}
    ports:
      - ${REDIS_COMMANDER_PORT:-8081}:8081
    depends_on:
      - redis
    networks:
      - weatherdata_devnet

  rabbitmq:
    image: rabbitmq:management
    container_name: weatherdata_rabbitmq
    restart: unless-stopped
    env_file:
      - ./envs/dev.messaging.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-rabbitmq}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-rabbitmq}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-rabbitmq}
    volumes:
      - ${RABBITMQ_DATA_DIR:-rabbitmq_data}:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_AMPQ_PORT:-5672}:5672
      - ${RABBITMQ_HTTP_PORT:-15672}:15672
    networks:
      - weatherdata_devnet
